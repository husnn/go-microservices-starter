// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.8.0
// source: components/components.proto

package components

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScreenType int32

const (
	ScreenType_SCREEN_UNSPECIFIED    ScreenType = 0
	ScreenType_SCREEN_SIGNUP         ScreenType = 1
	ScreenType_SCREEN_LOGIN          ScreenType = 2
	ScreenType_SCREEN_RESET_PASSWORD ScreenType = 3
)

// Enum value maps for ScreenType.
var (
	ScreenType_name = map[int32]string{
		0: "SCREEN_UNSPECIFIED",
		1: "SCREEN_SIGNUP",
		2: "SCREEN_LOGIN",
		3: "SCREEN_RESET_PASSWORD",
	}
	ScreenType_value = map[string]int32{
		"SCREEN_UNSPECIFIED":    0,
		"SCREEN_SIGNUP":         1,
		"SCREEN_LOGIN":          2,
		"SCREEN_RESET_PASSWORD": 3,
	}
)

func (x ScreenType) Enum() *ScreenType {
	p := new(ScreenType)
	*p = x
	return p
}

func (x ScreenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScreenType) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[0].Descriptor()
}

func (ScreenType) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[0]
}

func (x ScreenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScreenType.Descriptor instead.
func (ScreenType) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{0}
}

type Position int32

const (
	Position_POSITION_UNSPECIFIED Position = 0
	Position_POSITION_START       Position = 1
	Position_POSITION_MIDDLE      Position = 2
	Position_POSITION_END         Position = 3
	Position_POSITION_FILL        Position = 4
)

// Enum value maps for Position.
var (
	Position_name = map[int32]string{
		0: "POSITION_UNSPECIFIED",
		1: "POSITION_START",
		2: "POSITION_MIDDLE",
		3: "POSITION_END",
		4: "POSITION_FILL",
	}
	Position_value = map[string]int32{
		"POSITION_UNSPECIFIED": 0,
		"POSITION_START":       1,
		"POSITION_MIDDLE":      2,
		"POSITION_END":         3,
		"POSITION_FILL":        4,
	}
)

func (x Position) Enum() *Position {
	p := new(Position)
	*p = x
	return p
}

func (x Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[1].Descriptor()
}

func (Position) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[1]
}

func (x Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position.Descriptor instead.
func (Position) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{1}
}

type Element int32

const (
	Element_ELEMENT_UNSPECIFIED   Element = 0
	Element_ELEMENT_BUTTON        Element = 1
	Element_ELEMENT_LINK          Element = 2
	Element_ELEMENT_TEXT          Element = 3
	Element_ELEMENT_TOGGLE_BUTTON Element = 4
)

// Enum value maps for Element.
var (
	Element_name = map[int32]string{
		0: "ELEMENT_UNSPECIFIED",
		1: "ELEMENT_BUTTON",
		2: "ELEMENT_LINK",
		3: "ELEMENT_TEXT",
		4: "ELEMENT_TOGGLE_BUTTON",
	}
	Element_value = map[string]int32{
		"ELEMENT_UNSPECIFIED":   0,
		"ELEMENT_BUTTON":        1,
		"ELEMENT_LINK":          2,
		"ELEMENT_TEXT":          3,
		"ELEMENT_TOGGLE_BUTTON": 4,
	}
)

func (x Element) Enum() *Element {
	p := new(Element)
	*p = x
	return p
}

func (x Element) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Element) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[2].Descriptor()
}

func (Element) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[2]
}

func (x Element) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Element.Descriptor instead.
func (Element) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{2}
}

type Style int32

const (
	Style_STYLE_UNSPECIFIED Style = 0
	Style_STYLE_PRIMARY     Style = 1
	Style_STYLE_SECONDARY   Style = 2
	Style_STYLE_TERTIARY    Style = 3
)

// Enum value maps for Style.
var (
	Style_name = map[int32]string{
		0: "STYLE_UNSPECIFIED",
		1: "STYLE_PRIMARY",
		2: "STYLE_SECONDARY",
		3: "STYLE_TERTIARY",
	}
	Style_value = map[string]int32{
		"STYLE_UNSPECIFIED": 0,
		"STYLE_PRIMARY":     1,
		"STYLE_SECONDARY":   2,
		"STYLE_TERTIARY":    3,
	}
)

func (x Style) Enum() *Style {
	p := new(Style)
	*p = x
	return p
}

func (x Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Style) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[3].Descriptor()
}

func (Style) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[3]
}

func (x Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Style.Descriptor instead.
func (Style) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{3}
}

type Text_Type int32

const (
	Text_TYPE_UNSPECIFIED Text_Type = 0
	Text_TYPE_H1          Text_Type = 1
	Text_TYPE_H2          Text_Type = 2
	Text_TYPE_H3          Text_Type = 3
	Text_TYPE_BODY        Text_Type = 4
	Text_TYPE_LABEL       Text_Type = 5
)

// Enum value maps for Text_Type.
var (
	Text_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_H1",
		2: "TYPE_H2",
		3: "TYPE_H3",
		4: "TYPE_BODY",
		5: "TYPE_LABEL",
	}
	Text_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_H1":          1,
		"TYPE_H2":          2,
		"TYPE_H3":          3,
		"TYPE_BODY":        4,
		"TYPE_LABEL":       5,
	}
)

func (x Text_Type) Enum() *Text_Type {
	p := new(Text_Type)
	*p = x
	return p
}

func (x Text_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Text_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[4].Descriptor()
}

func (Text_Type) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[4]
}

func (x Text_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Text_Type.Descriptor instead.
func (Text_Type) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{0, 0}
}

type Action_Type int32

const (
	Action_TYPE_UNSPECIFIED Action_Type = 0
	Action_TYPE_ENDPOINT    Action_Type = 1
	Action_TYPE_REDIRECT    Action_Type = 2
	Action_TYPE_BACK        Action_Type = 3
	Action_TYPE_NEXT        Action_Type = 4
	Action_TYPE_TOGGLE      Action_Type = 5
)

// Enum value maps for Action_Type.
var (
	Action_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_ENDPOINT",
		2: "TYPE_REDIRECT",
		3: "TYPE_BACK",
		4: "TYPE_NEXT",
		5: "TYPE_TOGGLE",
	}
	Action_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_ENDPOINT":    1,
		"TYPE_REDIRECT":    2,
		"TYPE_BACK":        3,
		"TYPE_NEXT":        4,
		"TYPE_TOGGLE":      5,
	}
)

func (x Action_Type) Enum() *Action_Type {
	p := new(Action_Type)
	*p = x
	return p
}

func (x Action_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[5].Descriptor()
}

func (Action_Type) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[5]
}

func (x Action_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_Type.Descriptor instead.
func (Action_Type) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{1, 0}
}

type Action_Endpoint int32

const (
	Action_ENDPOINT_UNSPECIFIED         Action_Endpoint = 0
	Action_ENDPOINT_AUTH_SIGNUP         Action_Endpoint = 1
	Action_ENDPOINT_AUTH_LOGIN          Action_Endpoint = 2
	Action_ENDPOINT_AUTH_SUBMIT_OTP     Action_Endpoint = 3
	Action_ENDPOINT_AUTH_REQUEST_OTP    Action_Endpoint = 4
	Action_ENDPOINT_AUTH_RESET_PASSWORD Action_Endpoint = 5
)

// Enum value maps for Action_Endpoint.
var (
	Action_Endpoint_name = map[int32]string{
		0: "ENDPOINT_UNSPECIFIED",
		1: "ENDPOINT_AUTH_SIGNUP",
		2: "ENDPOINT_AUTH_LOGIN",
		3: "ENDPOINT_AUTH_SUBMIT_OTP",
		4: "ENDPOINT_AUTH_REQUEST_OTP",
		5: "ENDPOINT_AUTH_RESET_PASSWORD",
	}
	Action_Endpoint_value = map[string]int32{
		"ENDPOINT_UNSPECIFIED":         0,
		"ENDPOINT_AUTH_SIGNUP":         1,
		"ENDPOINT_AUTH_LOGIN":          2,
		"ENDPOINT_AUTH_SUBMIT_OTP":     3,
		"ENDPOINT_AUTH_REQUEST_OTP":    4,
		"ENDPOINT_AUTH_RESET_PASSWORD": 5,
	}
)

func (x Action_Endpoint) Enum() *Action_Endpoint {
	p := new(Action_Endpoint)
	*p = x
	return p
}

func (x Action_Endpoint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_Endpoint) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[6].Descriptor()
}

func (Action_Endpoint) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[6]
}

func (x Action_Endpoint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_Endpoint.Descriptor instead.
func (Action_Endpoint) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{1, 1}
}

type Input_Type int32

const (
	Input_TYPE_UNSPECIFIED Input_Type = 0
	Input_TEXT             Input_Type = 1
	Input_EMAIL            Input_Type = 2
	Input_PHONE            Input_Type = 3
	Input_PASSWORD         Input_Type = 4
	Input_NUMERIC          Input_Type = 5
	Input_OTP              Input_Type = 6
	Input_DATE_SHORT       Input_Type = 7
)

// Enum value maps for Input_Type.
var (
	Input_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TEXT",
		2: "EMAIL",
		3: "PHONE",
		4: "PASSWORD",
		5: "NUMERIC",
		6: "OTP",
		7: "DATE_SHORT",
	}
	Input_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TEXT":             1,
		"EMAIL":            2,
		"PHONE":            3,
		"PASSWORD":         4,
		"NUMERIC":          5,
		"OTP":              6,
		"DATE_SHORT":       7,
	}
)

func (x Input_Type) Enum() *Input_Type {
	p := new(Input_Type)
	*p = x
	return p
}

func (x Input_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Input_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[7].Descriptor()
}

func (Input_Type) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[7]
}

func (x Input_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Input_Type.Descriptor instead.
func (Input_Type) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{4, 0}
}

type Input_Transformation int32

const (
	Input_UNKNOWN_TRANSFORMATION Input_Transformation = 0
	Input_CAPITALISED            Input_Transformation = 1
	Input_LOWERCASE              Input_Transformation = 2
	Input_UPPERCASE              Input_Transformation = 3
)

// Enum value maps for Input_Transformation.
var (
	Input_Transformation_name = map[int32]string{
		0: "UNKNOWN_TRANSFORMATION",
		1: "CAPITALISED",
		2: "LOWERCASE",
		3: "UPPERCASE",
	}
	Input_Transformation_value = map[string]int32{
		"UNKNOWN_TRANSFORMATION": 0,
		"CAPITALISED":            1,
		"LOWERCASE":              2,
		"UPPERCASE":              3,
	}
)

func (x Input_Transformation) Enum() *Input_Transformation {
	p := new(Input_Transformation)
	*p = x
	return p
}

func (x Input_Transformation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Input_Transformation) Descriptor() protoreflect.EnumDescriptor {
	return file_components_components_proto_enumTypes[8].Descriptor()
}

func (Input_Transformation) Type() protoreflect.EnumType {
	return &file_components_components_proto_enumTypes[8]
}

func (x Input_Transformation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Input_Transformation.Descriptor instead.
func (Input_Transformation) EnumDescriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{4, 1}
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      Text_Type `protobuf:"varint,1,opt,name=type,proto3,enum=com.husnainjaved.boilerplate.components.Text_Type" json:"type,omitempty"`
	Alignment Position  `protobuf:"varint,2,opt,name=alignment,proto3,enum=com.husnainjaved.boilerplate.components.Position" json:"alignment,omitempty"`
	Value     string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{0}
}

func (x *Text) GetType() Text_Type {
	if x != nil {
		return x.Type
	}
	return Text_TYPE_UNSPECIFIED
}

func (x *Text) GetAlignment() Position {
	if x != nil {
		return x.Alignment
	}
	return Position_POSITION_UNSPECIFIED
}

func (x *Text) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      Action_Type     `protobuf:"varint,1,opt,name=type,proto3,enum=com.husnainjaved.boilerplate.components.Action_Type" json:"type,omitempty"`
	Style     Style           `protobuf:"varint,2,opt,name=style,proto3,enum=com.husnainjaved.boilerplate.components.Style" json:"style,omitempty"`
	Element   Element         `protobuf:"varint,3,opt,name=element,proto3,enum=com.husnainjaved.boilerplate.components.Element" json:"element,omitempty"`
	Text      string          `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Endpoint  Action_Endpoint `protobuf:"varint,6,opt,name=endpoint,proto3,enum=com.husnainjaved.boilerplate.components.Action_Endpoint" json:"endpoint,omitempty"`
	Screen    ScreenType      `protobuf:"varint,7,opt,name=screen,proto3,enum=com.husnainjaved.boilerplate.components.ScreenType" json:"screen,omitempty"`
	Url       string          `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Next      *Action         `protobuf:"bytes,9,opt,name=next,proto3" json:"next,omitempty"`
	NextAfter int64           `protobuf:"varint,10,opt,name=next_after,json=nextAfter,proto3" json:"next_after,omitempty"`
	Toggled   bool            `protobuf:"varint,11,opt,name=toggled,proto3" json:"toggled,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{1}
}

func (x *Action) GetType() Action_Type {
	if x != nil {
		return x.Type
	}
	return Action_TYPE_UNSPECIFIED
}

func (x *Action) GetStyle() Style {
	if x != nil {
		return x.Style
	}
	return Style_STYLE_UNSPECIFIED
}

func (x *Action) GetElement() Element {
	if x != nil {
		return x.Element
	}
	return Element_ELEMENT_UNSPECIFIED
}

func (x *Action) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Action) GetEndpoint() Action_Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return Action_ENDPOINT_UNSPECIFIED
}

func (x *Action) GetScreen() ScreenType {
	if x != nil {
		return x.Screen
	}
	return ScreenType_SCREEN_UNSPECIFIED
}

func (x *Action) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Action) GetNext() *Action {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *Action) GetNextAfter() int64 {
	if x != nil {
		return x.NextAfter
	}
	return 0
}

func (x *Action) GetToggled() bool {
	if x != nil {
		return x.Toggled
	}
	return false
}

type GroupPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosX    Position `protobuf:"varint,1,opt,name=pos_x,json=posX,proto3,enum=com.husnainjaved.boilerplate.components.Position" json:"pos_x,omitempty"`
	PosY    Position `protobuf:"varint,2,opt,name=pos_y,json=posY,proto3,enum=com.husnainjaved.boilerplate.components.Position" json:"pos_y,omitempty"`
	IsRow   bool     `protobuf:"varint,3,opt,name=is_row,json=isRow,proto3" json:"is_row,omitempty"`
	Reverse bool     `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *GroupPosition) Reset() {
	*x = GroupPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPosition) ProtoMessage() {}

func (x *GroupPosition) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPosition.ProtoReflect.Descriptor instead.
func (*GroupPosition) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{2}
}

func (x *GroupPosition) GetPosX() Position {
	if x != nil {
		return x.PosX
	}
	return Position_POSITION_UNSPECIFIED
}

func (x *GroupPosition) GetPosY() Position {
	if x != nil {
		return x.PosY
	}
	return Position_POSITION_UNSPECIFIED
}

func (x *GroupPosition) GetIsRow() bool {
	if x != nil {
		return x.IsRow
	}
	return false
}

func (x *GroupPosition) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type ActionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions  []*Action      `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	Position *GroupPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ActionGroup) Reset() {
	*x = ActionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGroup) ProtoMessage() {}

func (x *ActionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGroup.ProtoReflect.Descriptor instead.
func (*ActionGroup) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{3}
}

func (x *ActionGroup) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ActionGroup) GetPosition() *GroupPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               Input_Type           `protobuf:"varint,1,opt,name=type,proto3,enum=com.husnainjaved.boilerplate.components.Input_Type" json:"type,omitempty"`
	Name               string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Label              string               `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Placeholder        string               `protobuf:"bytes,4,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	Value              string               `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Description        string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Error              string               `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Validation         *Input_Validation    `protobuf:"bytes,8,opt,name=validation,proto3" json:"validation,omitempty"`
	TextTransformation Input_Transformation `protobuf:"varint,9,opt,name=text_transformation,json=textTransformation,proto3,enum=com.husnainjaved.boilerplate.components.Input_Transformation" json:"text_transformation,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{4}
}

func (x *Input) GetType() Input_Type {
	if x != nil {
		return x.Type
	}
	return Input_TYPE_UNSPECIFIED
}

func (x *Input) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Input) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Input) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *Input) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Input) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Input) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Input) GetValidation() *Input_Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *Input) GetTextTransformation() Input_Transformation {
	if x != nil {
		return x.TextTransformation
	}
	return Input_UNKNOWN_TRANSFORMATION
}

type Form struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heading    string        `protobuf:"bytes,1,opt,name=heading,proto3" json:"heading,omitempty"`
	Subheading string        `protobuf:"bytes,2,opt,name=subheading,proto3" json:"subheading,omitempty"`
	Groups     []*Form_Group `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Error      string        `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Footer     *Text         `protobuf:"bytes,5,opt,name=footer,proto3" json:"footer,omitempty"`
	Actions    []*Action     `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Form) Reset() {
	*x = Form{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form) ProtoMessage() {}

func (x *Form) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form.ProtoReflect.Descriptor instead.
func (*Form) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{5}
}

func (x *Form) GetHeading() string {
	if x != nil {
		return x.Heading
	}
	return ""
}

func (x *Form) GetSubheading() string {
	if x != nil {
		return x.Subheading
	}
	return ""
}

func (x *Form) GetGroups() []*Form_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Form) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Form) GetFooter() *Text {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *Form) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Input_Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min       int64  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max       int64  `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	MinLength int32  `protobuf:"varint,3,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength int32  `protobuf:"varint,4,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	Regex     string `protobuf:"bytes,5,opt,name=regex,proto3" json:"regex,omitempty"`
}

func (x *Input_Validation) Reset() {
	*x = Input_Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input_Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input_Validation) ProtoMessage() {}

func (x *Input_Validation) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input_Validation.ProtoReflect.Descriptor instead.
func (*Input_Validation) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Input_Validation) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Input_Validation) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Input_Validation) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *Input_Validation) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *Input_Validation) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type Form_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs   []*Input       `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Error    string         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Actions  []*Action      `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	Position *GroupPosition `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Form_Group) Reset() {
	*x = Form_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_components_components_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_Group) ProtoMessage() {}

func (x *Form_Group) ProtoReflect() protoreflect.Message {
	mi := &file_components_components_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_Group.ProtoReflect.Descriptor instead.
func (*Form_Group) Descriptor() ([]byte, []int) {
	return file_components_components_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Form_Group) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Form_Group) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Form_Group) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Form_Group) GetPosition() *GroupPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

var File_components_components_proto protoreflect.FileDescriptor

var file_components_components_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x63,
	0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e,
	0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64,
	0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x31, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x32, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48,
	0x33, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c,
	0x10, 0x05, 0x22, 0xd7, 0x06, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73,
	0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x4a, 0x0a,
	0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65,
	0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x54, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76,
	0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69,
	0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x43, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61,
	0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64,
	0x22, 0x71, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x43,
	0x4b, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x58, 0x54,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x10, 0x05, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x55, 0x50, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x4f, 0x54, 0x50, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x54, 0x50, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x05, 0x22, 0xd0, 0x01, 0x0a,
	0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46,
	0x0a, 0x05, 0x70, 0x6f, 0x73, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64,
	0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x5f, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e,
	0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x59, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x52, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22,
	0xac, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x49, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61,
	0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e,
	0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b,
	0x06, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73,
	0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x59, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76,
	0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69,
	0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x84, 0x01, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x22, 0x70, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x55, 0x4d,
	0x45, 0x52, 0x49, 0x43, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x10, 0x06, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x07, 0x22,
	0x5b, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x41, 0x50, 0x49, 0x54, 0x41, 0x4c, 0x49, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x43, 0x41, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x50, 0x50, 0x45, 0x52, 0x43, 0x41, 0x53, 0x45, 0x10, 0x03, 0x22, 0xbc, 0x04, 0x0a,
	0x04, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x4b, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76,
	0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x45, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e,
	0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x84, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x46,
	0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65,
	0x64, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64,
	0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x68, 0x75, 0x73, 0x6e, 0x61, 0x69, 0x6e, 0x6a, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x62, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x64, 0x0a, 0x0a, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x52,
	0x45, 0x45, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x55, 0x50, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10,
	0x03, 0x2a, 0x72, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x49, 0x4c, 0x4c, 0x10, 0x04, 0x2a, 0x75, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x5a, 0x0a, 0x05,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41,
	0x52, 0x59, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x54, 0x45,
	0x52, 0x54, 0x49, 0x41, 0x52, 0x59, 0x10, 0x03, 0x42, 0x23, 0x5a, 0x1c, 0x62, 0x6f, 0x69, 0x6c,
	0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0xba, 0x02, 0x02, 0x43, 0x4d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_components_components_proto_rawDescOnce sync.Once
	file_components_components_proto_rawDescData = file_components_components_proto_rawDesc
)

func file_components_components_proto_rawDescGZIP() []byte {
	file_components_components_proto_rawDescOnce.Do(func() {
		file_components_components_proto_rawDescData = protoimpl.X.CompressGZIP(file_components_components_proto_rawDescData)
	})
	return file_components_components_proto_rawDescData
}

var file_components_components_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_components_components_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_components_components_proto_goTypes = []interface{}{
	(ScreenType)(0),           // 0: com.husnainjaved.boilerplate.components.ScreenType
	(Position)(0),             // 1: com.husnainjaved.boilerplate.components.Position
	(Element)(0),              // 2: com.husnainjaved.boilerplate.components.Element
	(Style)(0),                // 3: com.husnainjaved.boilerplate.components.Style
	(Text_Type)(0),            // 4: com.husnainjaved.boilerplate.components.Text.Type
	(Action_Type)(0),          // 5: com.husnainjaved.boilerplate.components.Action.Type
	(Action_Endpoint)(0),      // 6: com.husnainjaved.boilerplate.components.Action.Endpoint
	(Input_Type)(0),           // 7: com.husnainjaved.boilerplate.components.Input.Type
	(Input_Transformation)(0), // 8: com.husnainjaved.boilerplate.components.Input.Transformation
	(*Text)(nil),              // 9: com.husnainjaved.boilerplate.components.Text
	(*Action)(nil),            // 10: com.husnainjaved.boilerplate.components.Action
	(*GroupPosition)(nil),     // 11: com.husnainjaved.boilerplate.components.GroupPosition
	(*ActionGroup)(nil),       // 12: com.husnainjaved.boilerplate.components.ActionGroup
	(*Input)(nil),             // 13: com.husnainjaved.boilerplate.components.Input
	(*Form)(nil),              // 14: com.husnainjaved.boilerplate.components.Form
	(*Input_Validation)(nil),  // 15: com.husnainjaved.boilerplate.components.Input.Validation
	(*Form_Group)(nil),        // 16: com.husnainjaved.boilerplate.components.Form.Group
}
var file_components_components_proto_depIdxs = []int32{
	4,  // 0: com.husnainjaved.boilerplate.components.Text.type:type_name -> com.husnainjaved.boilerplate.components.Text.Type
	1,  // 1: com.husnainjaved.boilerplate.components.Text.alignment:type_name -> com.husnainjaved.boilerplate.components.Position
	5,  // 2: com.husnainjaved.boilerplate.components.Action.type:type_name -> com.husnainjaved.boilerplate.components.Action.Type
	3,  // 3: com.husnainjaved.boilerplate.components.Action.style:type_name -> com.husnainjaved.boilerplate.components.Style
	2,  // 4: com.husnainjaved.boilerplate.components.Action.element:type_name -> com.husnainjaved.boilerplate.components.Element
	6,  // 5: com.husnainjaved.boilerplate.components.Action.endpoint:type_name -> com.husnainjaved.boilerplate.components.Action.Endpoint
	0,  // 6: com.husnainjaved.boilerplate.components.Action.screen:type_name -> com.husnainjaved.boilerplate.components.ScreenType
	10, // 7: com.husnainjaved.boilerplate.components.Action.next:type_name -> com.husnainjaved.boilerplate.components.Action
	1,  // 8: com.husnainjaved.boilerplate.components.GroupPosition.pos_x:type_name -> com.husnainjaved.boilerplate.components.Position
	1,  // 9: com.husnainjaved.boilerplate.components.GroupPosition.pos_y:type_name -> com.husnainjaved.boilerplate.components.Position
	10, // 10: com.husnainjaved.boilerplate.components.ActionGroup.actions:type_name -> com.husnainjaved.boilerplate.components.Action
	11, // 11: com.husnainjaved.boilerplate.components.ActionGroup.position:type_name -> com.husnainjaved.boilerplate.components.GroupPosition
	7,  // 12: com.husnainjaved.boilerplate.components.Input.type:type_name -> com.husnainjaved.boilerplate.components.Input.Type
	15, // 13: com.husnainjaved.boilerplate.components.Input.validation:type_name -> com.husnainjaved.boilerplate.components.Input.Validation
	8,  // 14: com.husnainjaved.boilerplate.components.Input.text_transformation:type_name -> com.husnainjaved.boilerplate.components.Input.Transformation
	16, // 15: com.husnainjaved.boilerplate.components.Form.groups:type_name -> com.husnainjaved.boilerplate.components.Form.Group
	9,  // 16: com.husnainjaved.boilerplate.components.Form.footer:type_name -> com.husnainjaved.boilerplate.components.Text
	10, // 17: com.husnainjaved.boilerplate.components.Form.actions:type_name -> com.husnainjaved.boilerplate.components.Action
	13, // 18: com.husnainjaved.boilerplate.components.Form.Group.inputs:type_name -> com.husnainjaved.boilerplate.components.Input
	10, // 19: com.husnainjaved.boilerplate.components.Form.Group.actions:type_name -> com.husnainjaved.boilerplate.components.Action
	11, // 20: com.husnainjaved.boilerplate.components.Form.Group.position:type_name -> com.husnainjaved.boilerplate.components.GroupPosition
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_components_components_proto_init() }
func file_components_components_proto_init() {
	if File_components_components_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_components_components_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input_Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_components_components_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_components_components_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_components_components_proto_goTypes,
		DependencyIndexes: file_components_components_proto_depIdxs,
		EnumInfos:         file_components_components_proto_enumTypes,
		MessageInfos:      file_components_components_proto_msgTypes,
	}.Build()
	File_components_components_proto = out.File
	file_components_components_proto_rawDesc = nil
	file_components_components_proto_goTypes = nil
	file_components_components_proto_depIdxs = nil
}
